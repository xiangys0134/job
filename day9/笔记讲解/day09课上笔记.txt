day09    2018-11-11


1. 内容回顾
	1. 面向对象
		1. 面向对象的定义
			1. 面向过程
			2. 面向对象
		2. 面向对象的三大特性
			1. 封装
				 1. 把有相同属性的物体划为一类
			2. 继承
				1. 子类继承父类
					1. 代码复用
					2. 规范子类的行为
				2. Python中支持多继承
					1. 多继承的顺序  --> C3算法 --> (MRO列表)	
			3. 多态
				1. Python天生支持多态
				2. Python崇尚鸭子类型				
	2. Python中的类
		1. 类的定义:
			class A:
				pass
		2. 类的成员
			1. 属性
				1. 实例属性
				2. 静态属性
			2. 方法
				1. __init__()  *****
				2. __new__()
				3. 实例方法    *****
				4. 类方法
					1. 由类来调用的方法	
				5. 静态方法
					1. 不需要传self参数
			3. 属性方法
				1. 看起来像是个属性其实是个方法
			4. 私有成员
				1. 类中使用双下划线开头的属性或方法都只能在类中使用
			5. 类的特殊方法
				1. __str__()
				2. __repr__()
				3. __del__()
				4. __dict__()
				5. __iter__()和__next__()
				6. __enter__和__exit__
				7. __call__()   --> 类装饰器
				8. __len__
				9. __eq__
				10. __hash__
				11. __doc__     --> 装饰器修复技术		
	3. 反射
		1. 由字符串找变量或者可调用对象
		2. 语法
			1. hasattr(obj, '字符串')
			2. a = getattr(obj, '字符串')
			3. setattr()
			4. delattr()
	4. importlib模块
		1. importlib.import_module('a.b')
	5. 异常处理
		1. 语法
			try:
				可能出错的代码
			except ValueError:
				抛出ValueError时要做的事儿
			except IndexError:
				抛出IndexError时要做的事儿
			except Exception as e:
				logging.error(str(e))
			finally:
				默认要做的事儿

				
				
2. 今日内容
	网络编程
	0. B/S架构和C/S架构
		1. Brower/Server
			获取信息为主
			1. 微博
			
		2. Client/Server
			功能比较复杂的
			1. QQ
	
	1. 网络基础
		互联网协议
			OSI 7层模型
			看Blog图
		1. Mac地址        ARP协议
		2. 以太网协议
		3. IP 
		4. TCP  UDP
		5. 端口
		
		IP+端口+Mac地址就能互联网上唯一确定一台计算机上的一个应用程序
	2. TCP和UDP
		1. TCP
			1. 基于连接的可靠的字节流服务
			2. TCP为什么是可靠的？
				1. TCP需要对方回复确认
			
		2. UDP
			1. 不需要建立连接 不可靠的字节流
			2. UDP只管往外发数据包，不需要对方回复确认
		
	2. socket编程（详见课上代码）
		1. socket编程示例
			1. 基于TCP的socket编程示例
			2. 基于UDP的socket编程示例
			
			3. TCP需要建立连接才能通信，UDP只要有消息和地址就能广播出去
			
			4. socket示例之循环获取用户输入
			5. socket示例之循环创建连接
		2. 执行系统命令
			1. subprocess模块执行系统命令
			2. 使用socket执行远程命令
		3. 粘包问题
			1. TCP流式传输数据和nagle算法
			
			2. 粘包的原因：
				1. 把数据量比较小和发送时间间隔比较短的包揉成一个数据包
			


	
	
3. 作业
	
	
	服务端：				            客户端：
	
	判断一旦命令是以cd开头	           cd /d D:
	回复：D:                           D:
	dir self.current_path	           dir 
	判断要切换的路径是不是自己的路径   cd D:\Gold
	
	
	
	
	
	
	
											
